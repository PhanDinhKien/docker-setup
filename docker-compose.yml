services:
  redis:
    build: ./redis
    container_name: redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  rabbitmq:
    build: ./rabbitmq
    container_name: rabbitmq
    restart: always
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin
    ports:
      - "5672:5672"   # AMQP protocol port
      - "15672:15672" # Management UI port
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq

  mongo:
    build: ./mongo
    container_name: mongodb
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db

  elasticsearch:
    build: ./elasticsearch
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - xpack.security.enabled=false  # Disable security
      - xpack.security.http.ssl.enabled=false  # Disable HTTPS
    ports:
      - "9200:9200"
      - "9300:9300"
    networks:
      - elastic_network
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data

  kibana:
    build: ./kibana  # Use the custom Kibana Dockerfile
    container_name: kibana
    depends_on:
      - elasticsearch
    ports:
      - "5601:5601"
    networks:
      - elastic_network

  sqlserver:
    build: ./sqlserver
    container_name: sqlserver
    restart: always
    ports:
      - "1433:1433"
    environment:
      SA_PASSWORD: "Kk@0975596489"
      ACCEPT_EULA: "Y"
      MSSQL_PID: "Express" # Options: Developer, Express, Standard, Enterprise
    volumes:
      - sqlserver-data:/var/opt/mssql

networks:
  elastic_network:
    driver: bridge

volumes:
  redis_data:
    driver: local
  rabbitmq_data:
    driver: local
  mongo_data:
    driver: local
  elasticsearch_data:
    driver: local
  sqlserver-data:
      driver: local